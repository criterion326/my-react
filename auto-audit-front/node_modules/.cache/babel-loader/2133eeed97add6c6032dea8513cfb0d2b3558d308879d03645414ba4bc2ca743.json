{"ast":null,"code":"var _jsxFileName = \"P:\\\\Data\\\\react\\\\my-react\\\\src\\\\components\\\\ActivityList.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React from 'react'\n\n// function ActivityList() {\n//     return (\n//         <div>\n//             <h2>Activity List</h2>\n//             {/* Activity list content here */}\n//         </div>\n//     )\n// }\n\n// export default ActivityList\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useTable, useSortBy, usePagination } from 'react-table';\nimport './ActivityList.css'; // 引入自定义的 CSS 文件\n\n// props 是一个对象，包含了从父组件传递过来的数据\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Greeting(props) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"\\u4F60\\u597D, \", props.name, \"!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n}\n_c = Greeting;\nfunction SortableTable({\n  columns,\n  data,\n  handleAuditClick\n}) {\n  _s();\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    // 代替 rows 用于分页\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0\n    } // 初始页码\n  }, useSortBy, usePagination // 使用分页插件\n  );\n  // 初始化表格状态和钩子：通过useTable钩子，传入列定义(columns)和数据(data)，以及初始状态（如初始页码pageIndex: 0）。此外，还使用了useSortBy和usePagination插件来为表格添加排序和分页功能。\n\n  // 渲染表格容器：使用<div>标签创建一个包含表格的容器，类名为table-container。\n\n  // 渲染表格：使用<table>标签定义表格本身，并通过getTableProps()方法应用表格的属性，这是useTable钩子提供的方法。\n\n  // 渲染表头：\n\n  // 使用<thead>标签定义表头部分。\n  // 遍历headerGroups数组（由useTable钩子提供，包含所有列的元数据）。\n  // 对于每个表头组，渲染一个<tr>行，并遍历每个组中的列，为每列渲染一个<th>表头单元格。\n  // 表头单元格通过column.getHeaderProps(column.getSortByToggleProps())获取必要的属性，并通过column.render('Header')渲染列标题。\n  // 如果列已经被排序，会在标题旁边显示一个表示排序方向的箭头图标。\n  // 渲染表体：\n\n  // 使用<tbody>标签定义表体部分。\n  // 遍历page数组（由useTable钩子提供，代表当前页的行数据），为每行数据渲染一个<tr>行。\n  // 在每行内部，遍历行中的单元格，为每个单元格渲染一个<td>标签，并通过cell.render('Cell')渲染单元格的内容。\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? ' 🔽' : ' 🔼' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: page.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => cell.column.id === 'action' ? /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAuditClick(row.original.id),\n                children: \"\\u5BA1\\u6838\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(0),\n        disabled: !canPreviousPage,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: '<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: '>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(pageCount - 1),\n        disabled: !canNextPage,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pageSize,\n        onChange: e => {\n          setPageSize(Number(e.target.value));\n        },\n        children: [10, 20, 30, 40, 50].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: pageSize,\n          children: [\"Show \", pageSize]\n        }, pageSize, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n// 使用示例\n\n// fetch('./public/activities.json') // 从本地资源文件中读取数据\n//     .then(response => response.json())\n//     .then(data2 => {\n//         console.log('read json', data2)\n//         data = data2.map(item => {\n//             return {\n//                 id: item.id,\n//                 activityTitle: item.activityTitle,\n//                 activityStartTime: item.activityStartTime,\n//                 activityEndTime: item.activityEndTime,\n//                 selectPublisher: item.selectPublisher,\n//                 activityStatus: item.activityStatus,\n//                 applyEndTime: item.applyDeadline,\n//             }\n//         })\n//         setData(data)\n//     })\n_s(SortableTable, \"2jFd6j7TMRXuNs5N9H1vUCvRiMA=\", false, function () {\n  return [useTable];\n});\n_c2 = SortableTable;\nfunction namechange(number) {\n  switch (number) {\n    case 0:\n      return '党建';\n    case 1:\n      return '团总支';\n    case 2:\n      return '研究生会';\n  }\n}\nfunction ActivityList() {\n  _s2();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const res = location.state || {};\n  const {\n    name: username,\n    token\n  } = res;\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch('/activities.json') // 确保路径正确\n    .then(response => response.json()).then(data => {\n      console.log('read json', data);\n      if (Array.isArray(data)) {\n        const formattedData = data.result.data.map(item => ({\n          id: item.id,\n          activityTitle: item.activityTitle,\n          activityStartTime: item.activityStartTime,\n          activityEndTime: item.activityEndTime,\n          selectPublisher: namechange(item.selectPublisher),\n          applyStatus: item.applyStatus,\n          activityRoles: item.activityRoles || '无',\n          applyEndTime: item.applyDeadline\n        }));\n        setData(formattedData);\n      } else {\n        console.error('Expected an array but got:', data);\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  const handleAuditClick = id => {\n    navigate.push(`/audit/${id}`);\n  };\n  const columns = [{\n    Header: 'ID',\n    accessor: 'id' // 访问器是从原始数据中取出数据的键\n  }, {\n    Header: '活动标题',\n    accessor: 'activityTitle'\n  }, {\n    Header: '开始时间',\n    accessor: 'activityStartTime'\n  }, {\n    Header: '结束时间',\n    accessor: 'activityEndTime'\n  }, {\n    Header: '发布人',\n    accessor: 'selectPublisher'\n  }, {\n    Header: '是否申请',\n    accessor: 'applyStatus'\n  }, {\n    Header: '角色身份',\n    accessor: 'activityRoles'\n  }, {\n    Header: '申请截至时间',\n    accessor: 'applyEndTime'\n  }, {\n    Header: '操作',\n    id: 'action',\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAuditClick(row.original.id),\n      children: \"\\u5BA1\\u6838\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }, this) // 通过row.original获取原始数据)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Activity List,\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Greeting, {\n        name: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SortableTable, {\n        data: data,\n        columns: columns,\n        handleAuditClick: handleAuditClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 9\n  }, this);\n}\n_s2(ActivityList, \"j1TDw67+dqIO3AsOgoPfgKKkNjA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c3 = ActivityList;\nexport default ActivityList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Greeting\");\n$RefreshReg$(_c2, \"SortableTable\");\n$RefreshReg$(_c3, \"ActivityList\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","useTable","useSortBy","usePagination","jsxDEV","_jsxDEV","Greeting","props","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","SortableTable","columns","data","handleAuditClick","_s","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","initialState","className","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","id","getCellProps","onClick","original","disabled","length","value","onChange","e","Number","target","_c2","namechange","number","ActivityList","_s2","location","navigate","res","username","token","setData","fetch","then","response","json","console","log","Array","isArray","formattedData","result","item","activityTitle","activityStartTime","activityEndTime","selectPublisher","applyStatus","activityRoles","applyEndTime","applyDeadline","error","catch","push","Header","accessor","Cell","_c3","$RefreshReg$"],"sources":["P:/Data/react/my-react/src/components/ActivityList.js"],"sourcesContent":["// import React from 'react'\r\n\r\n// function ActivityList() {\r\n//     return (\r\n//         <div>\r\n//             <h2>Activity List</h2>\r\n//             {/* Activity list content here */}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default ActivityList\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { useTable, useSortBy, usePagination } from 'react-table'\r\nimport './ActivityList.css' // 引入自定义的 CSS 文件\r\n\r\n// props 是一个对象，包含了从父组件传递过来的数据\r\nfunction Greeting(props) {\r\n    return <h1>你好, {props.name}!</h1>\r\n}\r\nfunction SortableTable({ columns, data, handleAuditClick }) {\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page, // 代替 rows 用于分页\r\n        prepareRow,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        state: { pageIndex, pageSize },\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            initialState: { pageIndex: 0 }, // 初始页码\r\n        },\r\n        useSortBy,\r\n        usePagination // 使用分页插件\r\n    )\r\n    // 初始化表格状态和钩子：通过useTable钩子，传入列定义(columns)和数据(data)，以及初始状态（如初始页码pageIndex: 0）。此外，还使用了useSortBy和usePagination插件来为表格添加排序和分页功能。\r\n\r\n    // 渲染表格容器：使用<div>标签创建一个包含表格的容器，类名为table-container。\r\n\r\n    // 渲染表格：使用<table>标签定义表格本身，并通过getTableProps()方法应用表格的属性，这是useTable钩子提供的方法。\r\n\r\n    // 渲染表头：\r\n\r\n    // 使用<thead>标签定义表头部分。\r\n    // 遍历headerGroups数组（由useTable钩子提供，包含所有列的元数据）。\r\n    // 对于每个表头组，渲染一个<tr>行，并遍历每个组中的列，为每列渲染一个<th>表头单元格。\r\n    // 表头单元格通过column.getHeaderProps(column.getSortByToggleProps())获取必要的属性，并通过column.render('Header')渲染列标题。\r\n    // 如果列已经被排序，会在标题旁边显示一个表示排序方向的箭头图标。\r\n    // 渲染表体：\r\n\r\n    // 使用<tbody>标签定义表体部分。\r\n    // 遍历page数组（由useTable钩子提供，代表当前页的行数据），为每行数据渲染一个<tr>行。\r\n    // 在每行内部，遍历行中的单元格，为每个单元格渲染一个<td>标签，并通过cell.render('Cell')渲染单元格的内容。\r\n    return (\r\n        <div className=\"table-container\">\r\n            <table {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                    {column.render('Header')}\r\n                                    <span>\r\n                                        {column.isSorted\r\n                                            ? column.isSortedDesc\r\n                                                ? ' 🔽'\r\n                                                : ' 🔼'\r\n                                            : ''}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map(cell =>\r\n                                    cell.column.id === 'action' ? (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            <button\r\n                                                onClick={() => handleAuditClick(row.original.id)}\r\n                                            >\r\n                                                审核\r\n                                            </button>\r\n                                        </td>\r\n                                    ) : (\r\n                                        <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                    )\r\n                                )}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            {/* 分页控制 */}\r\n            <div className=\"pagination\">\r\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                    {'<<'}\r\n                </button>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    {'<'}\r\n                </button>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    {'>'}\r\n                </button>\r\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                    {'>>'}\r\n                </button>\r\n                <span>\r\n                    Page{' '}\r\n                    <strong>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </strong>\r\n                </span>\r\n                <select\r\n                    value={pageSize}\r\n                    onChange={e => {\r\n                        setPageSize(Number(e.target.value))\r\n                    }}\r\n                >\r\n                    {[10, 20, 30, 40, 50].map(pageSize => (\r\n                        <option key={pageSize} value={pageSize}>\r\n                            Show {pageSize}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// 使用示例\r\n\r\n// fetch('./public/activities.json') // 从本地资源文件中读取数据\r\n//     .then(response => response.json())\r\n//     .then(data2 => {\r\n//         console.log('read json', data2)\r\n//         data = data2.map(item => {\r\n//             return {\r\n//                 id: item.id,\r\n//                 activityTitle: item.activityTitle,\r\n//                 activityStartTime: item.activityStartTime,\r\n//                 activityEndTime: item.activityEndTime,\r\n//                 selectPublisher: item.selectPublisher,\r\n//                 activityStatus: item.activityStatus,\r\n//                 applyEndTime: item.applyDeadline,\r\n//             }\r\n//         })\r\n//         setData(data)\r\n//     })\r\nfunction namechange(number) {\r\n    switch (number) {\r\n        case 0:\r\n            return '党建'\r\n        case 1:\r\n            return '团总支'\r\n        case 2:\r\n            return '研究生会'\r\n    }\r\n}\r\nfunction ActivityList() {\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n    const res = location.state || {}\r\n    const { name: username, token } = res\r\n\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch('/activities.json') // 确保路径正确\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('read json', data)\r\n                if (Array.isArray(data)) {\r\n                    const formattedData = data.result.data.map(item => ({\r\n                        id: item.id,\r\n                        activityTitle: item.activityTitle,\r\n                        activityStartTime: item.activityStartTime,\r\n                        activityEndTime: item.activityEndTime,\r\n                        selectPublisher: namechange(item.selectPublisher),\r\n                        applyStatus: item.applyStatus,\r\n                        activityRoles: item.activityRoles || '无',\r\n                        applyEndTime: item.applyDeadline,\r\n                    }))\r\n                    setData(formattedData)\r\n                } else {\r\n                    console.error('Expected an array but got:', data)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching data:', error)\r\n            })\r\n    }, [])\r\n    const handleAuditClick = id => {\r\n        navigate.push(`/audit/${id}`)\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            Header: 'ID',\r\n            accessor: 'id', // 访问器是从原始数据中取出数据的键\r\n        },\r\n        {\r\n            Header: '活动标题',\r\n            accessor: 'activityTitle',\r\n        },\r\n        {\r\n            Header: '开始时间',\r\n            accessor: 'activityStartTime',\r\n        },\r\n        {\r\n            Header: '结束时间',\r\n            accessor: 'activityEndTime',\r\n        },\r\n        {\r\n            Header: '发布人',\r\n            accessor: 'selectPublisher',\r\n        },\r\n        {\r\n            Header: '是否申请',\r\n            accessor: 'applyStatus',\r\n        },\r\n        {\r\n            Header: '角色身份',\r\n            accessor: 'activityRoles',\r\n        },\r\n        {\r\n            Header: '申请截至时间',\r\n            accessor: 'applyEndTime',\r\n        },\r\n        {\r\n            Header: '操作',\r\n            id: 'action',\r\n            Cell: ({ row }) => (\r\n                <button onClick={() => handleAuditClick(row.original.id)}>审核</button>\r\n            ), // 通过row.original获取原始数据)\r\n        },\r\n    ]\r\n    return (\r\n        <div>\r\n            <div className=\"header-container\">\r\n                <h1>Activity List,</h1>\r\n                <Greeting name={username} />\r\n            </div>\r\n            <div>\r\n                <SortableTable data={data} columns={columns} handleAuditClick={handleAuditClick} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActivityList\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}